// source: blog.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.blog.BlogRuntimeRequest', null, global);
goog.exportSymbol('proto.blog.BlogRuntimeRequest.BlogUpdateComparisionCase', null, global);
goog.exportSymbol('proto.blog.BlogRuntimeResponse', null, global);
goog.exportSymbol('proto.blog.BlogThumbsdownRequest', null, global);
goog.exportSymbol('proto.blog.BlogThumbsupRequest', null, global);
goog.exportSymbol('proto.blog.GetBlogRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog.GetBlogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blog.GetBlogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog.GetBlogRequest.displayName = 'proto.blog.GetBlogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog.BlogThumbsdownRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blog.BlogThumbsdownRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog.BlogThumbsdownRequest.displayName = 'proto.blog.BlogThumbsdownRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog.BlogThumbsupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blog.BlogThumbsupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog.BlogThumbsupRequest.displayName = 'proto.blog.BlogThumbsupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog.BlogRuntimeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.blog.BlogRuntimeRequest.oneofGroups_);
};
goog.inherits(proto.blog.BlogRuntimeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog.BlogRuntimeRequest.displayName = 'proto.blog.BlogRuntimeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog.BlogRuntimeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blog.BlogRuntimeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog.BlogRuntimeResponse.displayName = 'proto.blog.BlogRuntimeResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog.GetBlogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blog.GetBlogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog.GetBlogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.GetBlogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blogId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog.GetBlogRequest}
 */
proto.blog.GetBlogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog.GetBlogRequest;
  return proto.blog.GetBlogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog.GetBlogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog.GetBlogRequest}
 */
proto.blog.GetBlogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlogId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog.GetBlogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog.GetBlogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog.GetBlogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.GetBlogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlogId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string blog_id = 1;
 * @return {string}
 */
proto.blog.GetBlogRequest.prototype.getBlogId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog.GetBlogRequest} returns this
 */
proto.blog.GetBlogRequest.prototype.setBlogId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog.BlogThumbsdownRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blog.BlogThumbsdownRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog.BlogThumbsdownRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.BlogThumbsdownRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blogId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    thumpsDown: jspb.Message.getFieldWithDefault(msg, 2, 0),
    who: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog.BlogThumbsdownRequest}
 */
proto.blog.BlogThumbsdownRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog.BlogThumbsdownRequest;
  return proto.blog.BlogThumbsdownRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog.BlogThumbsdownRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog.BlogThumbsdownRequest}
 */
proto.blog.BlogThumbsdownRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlogId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThumpsDown(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWho(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog.BlogThumbsdownRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog.BlogThumbsdownRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog.BlogThumbsdownRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.BlogThumbsdownRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlogId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThumpsDown();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWho();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string blog_id = 1;
 * @return {string}
 */
proto.blog.BlogThumbsdownRequest.prototype.getBlogId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog.BlogThumbsdownRequest} returns this
 */
proto.blog.BlogThumbsdownRequest.prototype.setBlogId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 thumps_down = 2;
 * @return {number}
 */
proto.blog.BlogThumbsdownRequest.prototype.getThumpsDown = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blog.BlogThumbsdownRequest} returns this
 */
proto.blog.BlogThumbsdownRequest.prototype.setThumpsDown = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string who = 3;
 * @return {string}
 */
proto.blog.BlogThumbsdownRequest.prototype.getWho = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog.BlogThumbsdownRequest} returns this
 */
proto.blog.BlogThumbsdownRequest.prototype.setWho = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog.BlogThumbsupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blog.BlogThumbsupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog.BlogThumbsupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.BlogThumbsupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blogId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    thumpsUp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    who: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog.BlogThumbsupRequest}
 */
proto.blog.BlogThumbsupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog.BlogThumbsupRequest;
  return proto.blog.BlogThumbsupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog.BlogThumbsupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog.BlogThumbsupRequest}
 */
proto.blog.BlogThumbsupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlogId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThumpsUp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWho(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog.BlogThumbsupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog.BlogThumbsupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog.BlogThumbsupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.BlogThumbsupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlogId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThumpsUp();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWho();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string blog_id = 1;
 * @return {string}
 */
proto.blog.BlogThumbsupRequest.prototype.getBlogId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog.BlogThumbsupRequest} returns this
 */
proto.blog.BlogThumbsupRequest.prototype.setBlogId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 thumps_up = 2;
 * @return {number}
 */
proto.blog.BlogThumbsupRequest.prototype.getThumpsUp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blog.BlogThumbsupRequest} returns this
 */
proto.blog.BlogThumbsupRequest.prototype.setThumpsUp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string who = 3;
 * @return {string}
 */
proto.blog.BlogThumbsupRequest.prototype.getWho = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog.BlogThumbsupRequest} returns this
 */
proto.blog.BlogThumbsupRequest.prototype.setWho = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.blog.BlogRuntimeRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.blog.BlogRuntimeRequest.BlogUpdateComparisionCase = {
  BLOG_UPDATE_COMPARISION_NOT_SET: 0,
  BLOG_THUMBSUP_REQUEST: 1,
  BLOG_THUMBSDOWN_REQUEST: 2
};

/**
 * @return {proto.blog.BlogRuntimeRequest.BlogUpdateComparisionCase}
 */
proto.blog.BlogRuntimeRequest.prototype.getBlogUpdateComparisionCase = function() {
  return /** @type {proto.blog.BlogRuntimeRequest.BlogUpdateComparisionCase} */(jspb.Message.computeOneofCase(this, proto.blog.BlogRuntimeRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog.BlogRuntimeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blog.BlogRuntimeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog.BlogRuntimeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.BlogRuntimeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blogThumbsupRequest: (f = msg.getBlogThumbsupRequest()) && proto.blog.BlogThumbsupRequest.toObject(includeInstance, f),
    blogThumbsdownRequest: (f = msg.getBlogThumbsdownRequest()) && proto.blog.BlogThumbsdownRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog.BlogRuntimeRequest}
 */
proto.blog.BlogRuntimeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog.BlogRuntimeRequest;
  return proto.blog.BlogRuntimeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog.BlogRuntimeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog.BlogRuntimeRequest}
 */
proto.blog.BlogRuntimeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.blog.BlogThumbsupRequest;
      reader.readMessage(value,proto.blog.BlogThumbsupRequest.deserializeBinaryFromReader);
      msg.setBlogThumbsupRequest(value);
      break;
    case 2:
      var value = new proto.blog.BlogThumbsdownRequest;
      reader.readMessage(value,proto.blog.BlogThumbsdownRequest.deserializeBinaryFromReader);
      msg.setBlogThumbsdownRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog.BlogRuntimeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog.BlogRuntimeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog.BlogRuntimeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.BlogRuntimeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlogThumbsupRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.blog.BlogThumbsupRequest.serializeBinaryToWriter
    );
  }
  f = message.getBlogThumbsdownRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.blog.BlogThumbsdownRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional BlogThumbsupRequest blog_thumbsup_request = 1;
 * @return {?proto.blog.BlogThumbsupRequest}
 */
proto.blog.BlogRuntimeRequest.prototype.getBlogThumbsupRequest = function() {
  return /** @type{?proto.blog.BlogThumbsupRequest} */ (
    jspb.Message.getWrapperField(this, proto.blog.BlogThumbsupRequest, 1));
};


/**
 * @param {?proto.blog.BlogThumbsupRequest|undefined} value
 * @return {!proto.blog.BlogRuntimeRequest} returns this
*/
proto.blog.BlogRuntimeRequest.prototype.setBlogThumbsupRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.blog.BlogRuntimeRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blog.BlogRuntimeRequest} returns this
 */
proto.blog.BlogRuntimeRequest.prototype.clearBlogThumbsupRequest = function() {
  return this.setBlogThumbsupRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blog.BlogRuntimeRequest.prototype.hasBlogThumbsupRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BlogThumbsdownRequest blog_thumbsdown_request = 2;
 * @return {?proto.blog.BlogThumbsdownRequest}
 */
proto.blog.BlogRuntimeRequest.prototype.getBlogThumbsdownRequest = function() {
  return /** @type{?proto.blog.BlogThumbsdownRequest} */ (
    jspb.Message.getWrapperField(this, proto.blog.BlogThumbsdownRequest, 2));
};


/**
 * @param {?proto.blog.BlogThumbsdownRequest|undefined} value
 * @return {!proto.blog.BlogRuntimeRequest} returns this
*/
proto.blog.BlogRuntimeRequest.prototype.setBlogThumbsdownRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.blog.BlogRuntimeRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blog.BlogRuntimeRequest} returns this
 */
proto.blog.BlogRuntimeRequest.prototype.clearBlogThumbsdownRequest = function() {
  return this.setBlogThumbsdownRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blog.BlogRuntimeRequest.prototype.hasBlogThumbsdownRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog.BlogRuntimeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blog.BlogRuntimeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog.BlogRuntimeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.BlogRuntimeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    blogId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    thumbsDown: jspb.Message.getFieldWithDefault(msg, 2, 0),
    thumbsUp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    who: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog.BlogRuntimeResponse}
 */
proto.blog.BlogRuntimeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog.BlogRuntimeResponse;
  return proto.blog.BlogRuntimeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog.BlogRuntimeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog.BlogRuntimeResponse}
 */
proto.blog.BlogRuntimeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlogId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThumbsDown(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThumbsUp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWho(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog.BlogRuntimeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog.BlogRuntimeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog.BlogRuntimeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog.BlogRuntimeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlogId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThumbsDown();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getThumbsUp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWho();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string blog_id = 1;
 * @return {string}
 */
proto.blog.BlogRuntimeResponse.prototype.getBlogId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog.BlogRuntimeResponse} returns this
 */
proto.blog.BlogRuntimeResponse.prototype.setBlogId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 thumbs_down = 2;
 * @return {number}
 */
proto.blog.BlogRuntimeResponse.prototype.getThumbsDown = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blog.BlogRuntimeResponse} returns this
 */
proto.blog.BlogRuntimeResponse.prototype.setThumbsDown = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 thumbs_up = 3;
 * @return {number}
 */
proto.blog.BlogRuntimeResponse.prototype.getThumbsUp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blog.BlogRuntimeResponse} returns this
 */
proto.blog.BlogRuntimeResponse.prototype.setThumbsUp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string who = 4;
 * @return {string}
 */
proto.blog.BlogRuntimeResponse.prototype.getWho = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog.BlogRuntimeResponse} returns this
 */
proto.blog.BlogRuntimeResponse.prototype.setWho = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.blog);
